#-----GAMESS-US calculator------#

    - somehow fix discrepancies between NWChem xc and GAMESS-US xc
    
    - GEBF self-energy correction
    
    - if multiplicity > 1 set scf to UHF or ROHF

    - will it give different results if I take the MM self-energy of the GAMSS-US output (it definitely should not)

#--------------------------------#

general:
    - added separate error output to calling command
    - modified clean-up routine to remove only files that correspond to current fragment
        --> should probably redirect this output into error out as well

    - for NWChem and GAMESS-US fix the matter that we need to set p.task to 'gradients' manually if we want to be able to get the forces
        --> this should get set if we ask for get_forces --> maybe override default method get_forces in FileIOcalculator or Calculator

        already did this, generally speaking, it is at the end of the nwchem.py file, but still commented
        if activated we can remove all the crap in GEBF calculator that does things like:
            if gradients:
                self.pricalc.parameters['task'] = 'gradient' 
                    
                    BECAUSE IT IS ANNOYING AND OTHERWISE GRADIENTS WILL ALWWAYS BE CALCULATED

check the new calculators for correct I/O -- something is weird with the lines theree
also modify I/O stuff to accept dummy atoms (compare NWChem I/O)

check reading of forces for both ORCA and GAMESS-US calculator and compare to NWChem

MM self-energy correction needed for ORCA?

pointcharge construction for ORCA?

adapt NWChem calculator (also) to automatically set the "spherical" option if basispar is not set and actually do it like this in GAMESS-US too
    --> set it, if it is not set, and otherwise ignore (or maybe add) basispar

check all my calculators for errors in string.find() comparisons

for NWChem calculator also add the possibility to print electron densities?!

do we reaaaaaaaly need to specify polar or will the program just pick the right one itself?

orca's calculator defaults will not give a working calculation

ORCA uses by default RI approximation for DFT and breaks if it is turned off. That sucks!!!

    Anyhow, maybe it would be useful to actually include a keyword in the parameters 'riapprox' for all calculators that support it

change argument delold to __init__ of GAMESS-US to kwarg

adapt GAMESS-US calculator to generate an as long as possible line of keywords for each specific keyword given
    
    --> so that we, e.g., two instead of three $control lines if possible

there are problems related to the use of COSMO and geometry optimizations
    --> self.read_number_of_iterations()
    --> self.read_energy()
    
    are not working anymore and need to be adapted

    either find some way to generalize the statements that the calculator is looking for or add specific option that enables continuum solvent and makes the use of different strings to be searched for possible (we could also look in the input file)

check string comparisons that they are either setup to upper or lower so that we don't get into any treouble with case-sensitivity

check for subsystem generation if everything is sorted already when it is created and not just somewhere at the end (for list comparison)

with default geometry optmization parameters and NWChem MP2 calculation the whole thing crashes, because 'task mp2 property' gets demanded, which does not  work that way

we need to do better with the vectors calculated in MCSCF run. We should not assign the results as parameters to _calc.parameters.vec in the 'read_results' method. Do it somewhere else, either in 'update' or 'calculate' method

clear separation when we should read in initial vectors for GAMESS (right now it's manually restricted to MCSCF calculations)
